{#   Logged In - Org Info   #}

{% extends "_layouts/_base" %}
{% import '_macros/global' as global %}
{% import '_macros/forms' as form %}

{% requireLogin %}
{% if not currentUser.isInGroup('memberAdmin') %}
    {% redirect '/account/profile' %}
{% endif %}

{% set cart = craft.commerce.carts.cart %}

{% set organization = craft.entries().anyStatus().id(currentUser.organizationId).one() %}
{% if not organization %}
    {% redirect '/account/profile' %}
{% elseif organization.enabled == 0 %}
	{% redirect '/rejoin' %}
{% endif %}


      	
{% set payments = null %}
{% set submissionId = organization.submissionId %}
{% if submissionId %}
	{% set payments = craft.freeformPayments.payments(submissionId) %}
{% else %}

	{% set submissions = craft.freeform.submissions({
		form: 'joinTACWApage2'
	}).all() %}
	
	{% for submission in submissions if submission.creationId == organization.creationId %}
		{% set payments = craft.freeformPayments.payments(submission.id) %}
	{% endfor %}
{% endif %}

{# {% set customer = craft.changestripesubscription.getCustomerBySubscription(payments.resourceId) %} #}
 
{#  {% set planId = (organization.collectionAndTreatmentSystems) ? organization.collectionAndTreatmentSystems : (organization.collectionSystemOnly) ? organization.collectionSystemOnly : organization.affiliateSize %} #}
 {% set planId = (organization.organizationType == 'collectionAndTreatmentSystems') ? organization.collectionAndTreatmentSystems : (organization.organizationType == 'collectionSystemOnly') ? organization.collectionSystemOnly : organization.affiliateSize %}


{% block content %}

   {#   Page Header   #}
   {% include '_components/static/page-header'
      with {
         'type': 'border',
         'heading': 'Organization Payment',
         'tabs': 'true',
         'activeTab': '3'
      }
   %}

   <div class="form-flow  |  container">
      
      <div class="form-flow__wrapper">
      
      	
	    
	
	    <form method="POST" class="add-to-cart-form">
{# 	    	<label>Current Card: *{{ payments.last4 }}<br>Amount: {{ payments.amount|currency('USD') }}</label> #}
	        <input type="hidden" name="action" value="change-stripe-subscription/default/update-card">
	        <input type="hidden" name="orgId" value="{{ currentUser.organizationId }}">
	        <input type="hidden" name="subscriptionId" value="{{ payments.resourceId }}">
	        {{ csrfInput() }}
	    {% if cart.gatewayId %}
	        <input type="hidden" name="gatewayId" value="{{ cart.gatewayId }}"/>
	        {{ cart.gateway.getPaymentFormHtml({})|raw }}
	        <div class="pl-10 pr-10 pt-5 pb-0">
	            <button type="submit" class="bg-blue text-white rounded px-4 py-4 mb-2 text-lg hover:bg-blue-dark">
	                Update
	            </button>
	        </div>
	    {% endif %}
	    </form>
    	
      </div>
      
      {% set sent = craft.app.request.param('success') %}
      {% if sent > 0 %}
      <div class="form-flow__wrapper" style="margin-top:20px;">
      	Your credit card has been updated.
      </div>
      {% endif %}
   </div>
   
   

<script
    src="https://code.jquery.com/jquery-3.4.1.min.js"
    integrity="sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo="
    crossorigin="anonymous"></script>

<script>
    function initStripe() {
        // Because this might get executed before Stripe is loaded.
        if (typeof Stripe === "undefined") {
            setTimeout(initStripe, 200);
        } else {
            $('.stripe-form').each(function() {
                $container = $(this);

                function updateErrorMessage(event) {
                    var displayError = $('.card-errors', $container).get(0);

                    if (event.error) {
                        displayError.textContent = event.error.message;
                    } else {
                        displayError.textContent = '';
                    }

                    if ($('.modal').data('modal')) {
                        $('.modal').data('modal').updateSizeAndPosition();
                    }
                }

                var stripe = Stripe($container.data('publishablekey'));
                var elements = stripe.elements();

                var style = {
                    base: {
                        // Add your base input styles here. For example:
                        fontSize: '14px',
                        lineHeight: '21px'
                    }
                };

                // Create an instance of the card Element
                var card = elements.create('card', {
                        style: style,
                        hidePostalCode: true
                    }
                );

                card.addEventListener('change', updateErrorMessage);

                // Add an instance of the card Element into the `card-element` <div>
                card.mount($('.card-data', $container).empty().get(0));

                var $form = $('form', $container);

                if ($form.length === 0) {
                    $form = $container.parents('form');
                }

                // Remove already bound events
                $form.off('submit');

                $form.on('submit', function(ev) {
                    ev.preventDefault();

                    // If form submitted already, disregard.
                    if ($form.data('processing')) {
                        return false;
                    }

                    $form.data('processing', true);

                    // Compose card holder info
                    var cardHolderName, orderEmail, ownerAddress;

                    if ($('.card-holder-first-name ', $form).length > 0 && $('.card-holder-last-name', $form).length > 0) {
                        cardHolderName = $('.card-holder-first-name', $form).val() + ' ' + $('.card-holder-last-name', $form).val();
                    }

                    if ($('.stripe-address', $form).length > 0) {
                        ownerAddress = {
                            'line1': $('input[name=stripe-line1]', $form).val(),
                            'city': $('input[name=stripe-city]', $form).val(),
                            'postal_code': $('input[name=stripe-postal-code]', $form).val(),
                            'country': $('input[name=stripe-country]', $form).val(),
                        };
                    }

                    orderEmail = $('input[name=orderEmail]').val();

                    // Tokenize the credit card details and create a payment source
                    stripe.createSource(card, {owner: {name: cardHolderName, email: orderEmail, address: ownerAddress}}).then(function(result) {
                        if (result.error) {
                            updateErrorMessage(result);
                            $form.data('processing', false);
                        } else {
                            // Signal to backend that 3D secure payment is required if card or gateway options demands so.
                            if (result.source.card.three_d_secure === "required" || (result.source.card.three_d_secure === "optional" && $container.data('enforce3dsecure'))) {
                                $form.append($('<input type="hidden" name="threeDSecure"/>').val(1));
                            }

                            // Add the payment source token to the form.
                            $form.append($('<input type="hidden" name="stripeToken"/>').val(result.source.id));
                            $form.get(0).submit();
                        }
                    });
                });

                if ($('.modal').data('modal')) {
                    $('.modal').data('modal').updateSizeAndPosition();
                }
            });
        }
    }

    initStripe();
</script>


{% endblock %}


{% do view.registerJsFile('/assets/js/static/form-validation.js') %}
	